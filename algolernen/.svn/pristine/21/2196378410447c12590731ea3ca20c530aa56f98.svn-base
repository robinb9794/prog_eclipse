package uebung11.aufgabe02;

import uebung11.aufgabe02.RoBDD.*;

public class FuncGen {

	public Func genFunc(int anzTripel, RoBDD roBDD) {
		Func temp = roBDD.genVar("Tripel 0");

		for (int i = 1; i < anzTripel; ++i) {
			int rand = (int) (Math.random() * 8);

			switch (rand) {
			case 0:
				temp = roBDD.and(temp, roBDD.genVar("Tripel " + i));
				break;
			case 1:
				temp = roBDD.or(temp, roBDD.genVar("Tripel " + i));
				break;
			case 2:
				temp = roBDD.aequivalenz(temp, roBDD.genVar("Tripel " + i));
				break;
			case 3:
				temp = roBDD.implikation(temp, roBDD.genVar("Tripel " + i));
				break;
			case 4:
				temp = roBDD.and(roBDD.not(temp), roBDD.genVar("Tripel " + i));
				break;
			case 5:
				temp = roBDD.or(roBDD.not(temp), roBDD.genVar("Tripel " + i));
				break;
			case 6:
				temp = roBDD.aequivalenz(roBDD.not(temp), roBDD.genVar("Tripel " + i));
				break;
			case 7:
				temp = roBDD.implikation(roBDD.not(temp), roBDD.genVar("Tripel " + i));
				break;
			}
		}
		return temp;
	}
}
