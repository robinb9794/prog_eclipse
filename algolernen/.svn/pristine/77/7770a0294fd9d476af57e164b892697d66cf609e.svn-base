package klausurStuff.approximation;

import java.util.Arrays;

public class Approx {
	public static float approx(float[] a, float f) {
		int l=0;
		int r=a.length-1;
		int MID = 0;
		while(l<r) {
			MID = (l+r)/2;
			if(a[MID] < f)
				l = MID+1;
			else if(a[MID] > f)
				r = MID-1;
			else 
				return a[MID];
		}
		if(MID < 1 || MID > a.length-1)
			return a[MID]; 
		float f1, f2;
		if(f < a[MID]) {
			f1 = Math.abs(f) - Math.abs(a[MID]);
			f2 = Math.abs(f) - Math.abs(a[MID-1]);
			return f1<f2?a[MID]:a[MID-1];
		}
		else {
			f1 = Math.abs(f) - Math.abs(a[MID]);
			f2 = Math.abs(f) - Math.abs(a[MID+1]);
			return f1<f2?a[MID]:a[MID+1];
		}
	}
	
	public static void main(String[] args) {
		float[] M = new float[1000];
		for(int i=0; i<M.length; ++i)
			M[i] = (float)Math.random();
		Arrays.sort(M);
		
		System.out.println(approx(M, 0.0000001f));
		System.out.println("First Element: " + M[0]);
		System.out.println("Last  Element: " + M[999]);
		
//		for(int i=0; i<M.length; ++i)
//			System.out.println(M[i]);
		
	}
}
