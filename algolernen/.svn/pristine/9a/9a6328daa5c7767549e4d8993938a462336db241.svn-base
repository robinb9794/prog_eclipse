package uebung11.aufgabe01;

import java.io.IOException;

import uebung11.aufgabe01.RoBDD.Func;

// Aufgabe 1: 
// Implementieren Sie die RoBDDs und fügen Sie noch Funktionen für 
// Konjunktion, Disjunktion, Negation, Implikation und Äquivalenz hinzu. 
// Variablen sollen nicht mehr durch Zahlen sondern durch Namen repräsentiert 
// werden. Dazu sollten Sie eine weitere Hashtabelle einführen, die die Namen auf 
// die Variablenintegerwerte abbildet. 

public class Aufgabe01 {

	Aufgabe01() throws IOException {
		RoBDD roBDD = new RoBDD();

		// Test der boolschen Funktionen ------------
		Func x = roBDD.genTrue();
		System.out.println("x " + x.isTrue());
		Func y = roBDD.genFalse();
		System.out.println("y " + y.isTrue());

		System.out.println("\nx&y = " + roBDD.and(x, y).isTrue()); // and
		System.out.println("x|y = " + roBDD.or(x, y).isTrue()); // and
		System.out.println("not x = " + roBDD.not(x).isTrue()); // not
		System.out.println("not y = " + roBDD.not(y).isTrue()); // not
		System.out.println("x->y = " + roBDD.implikation(x, y).isTrue()); // implikation
		System.out
				.println("x<->y = " + roBDD.aequivalenz(x, y).isTrue() + "\n"); // äquivalenz
		// --------------------------------------------
		
		// test der hashtables ---------
		Func f = roBDD.and(roBDD.genVar("x"), (roBDD.genVar("y")));
		roBDD.printHashMaps();
	}

	public static void main(String[] args) throws IOException {
		new Aufgabe01();
	}
}
