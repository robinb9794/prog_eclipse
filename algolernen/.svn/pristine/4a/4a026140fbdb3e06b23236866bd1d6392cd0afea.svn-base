package uebung02.aufgabe02;

import java.awt.Graphics;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.MediaTracker;
import java.awt.Toolkit;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

import javax.swing.JComponent;
import javax.swing.JFrame;

import uebung02.aufgabe01.DateiAuswahl;

// Aufgabe 2: 
// Verwenden Sie die obige Information, um Ihr eingelesenes Bild nur mit 50% der 
// ursprünglichen Farben darzustellen. Bilden Sie dazu die eingesparten Farben auf 
// ähnliche, noch vorhandene ab. Zeichnen Sie das Bild in einem Fenster. Sparen 
// Sie die 50% von Farben ein, die amwenigsten gebraucht werden. Die 
// Ähnlichkeit von Farben können Sie über die Differenzen zwischen dem Rot-, 
// Grün- und Blauanteil bestimmen. Je kleiner die Summe der absoluten 
// Differenzen ist, desto ähnlicher sind sich die Farben. 

public class Aufgabe02 extends JFrame {
	final int w = 800;
	final int h = 700;

	Aufgabe02() throws Exception {
		setLayout(new GridLayout(2, 1));
		setSize(w, h);
		setDefaultCloseOperation(DISPOSE_ON_CLOSE);
		
		addWindowListener(new WindowAdapter(){
			public void windowClosing(WindowEvent e){
				System.exit(0);
			}
		});
		
		final Image image = new DateiAuswahl().bildAuswahl();

		MediaTracker mt = new MediaTracker(this);
		mt.addImage(image, 0);
		mt.waitForAll();

		add(new JComponent() {
			public void paintComponent(Graphics g) {
				g.drawImage(image, 0, 0, getWidth(), getHeight(), this);
			}
		});
		
		setVisible(true);
		
		ImageColorReduction icr = new ImageColorReduction();
		long time = System.currentTimeMillis();
		final Image img = icr.imageColorReduction(image, 0.99, this);
		System.out.println(System.currentTimeMillis()-time);
		
		add(new JComponent() {
			public void paintComponent(Graphics g) {
				g.drawImage(img, 0, 0, getWidth(), getHeight(), this);
			}
		});
		
		validate();
		repaint();
	}

	public static void main(String[] args) throws Exception {
		new Aufgabe02();
	}
}
