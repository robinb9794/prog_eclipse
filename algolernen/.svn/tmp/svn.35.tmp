package uebung08.aufgabe02;

import java.io.IOException;

// Aufgabe 2: 
// Implementieren Sie für den Rot-Schwarz Baum eine Ausgabemethode für 
// uDrawGraph (siehe Aufgabe Übung 8)zur Visualisierung des Baums.

public class Aufgabe02 {

	final int anzahlElemente = 50;

	Aufgabe02() throws IOException {
		RedBlackTree_noNH_wM<Integer, String> redBlackTree_noNH_wM = new RedBlackTree_noNH_wM<Integer, String>();
		int[] M = {13, -7, 34, 3, 5, 12, 9, -200, 45, 14, -1, 15, -6, 18, -9, 44};
		for(int i=0; i<M.length; ++i) {
			redBlackTree_noNH_wM.insert(M[i], Integer.toString(i));
		}
		
//		UniqueNumberOperator intGen = new UniqueNumberOperator(anzahlElemente,mode.readFile);
//
//		boolean nochZeilen = true;
//		while (nochZeilen == true) {
//			int rand = intGen.getUniqueInt();
//			if (rand != -1) {
//				redBlackTree_noNH_wM.insert(rand, "ohne NodeHandler mit Methoden" + rand);
//			} else
//				nochZeilen = false;
//		}
//
		TreePrinter<Integer,String> treePrinter = new TreePrinter<Integer, String>(false,true);
		
		treePrinter.setTree(redBlackTree_noNH_wM);
		treePrinter.printTree("ohne NodeHandler mit Methoden");
		
		System.out.println(redBlackTree_noNH_wM.treeDept());
		
		if(treePrinter.ready==true){
			treePrinter.client.close();
		}
		
		System.out.println("leafCount: "+redBlackTree_noNH_wM.countLeaf());
		
		System.exit(0);
	}

	public static void main(String[] args) throws IOException {
		new Aufgabe02();
	}
}
